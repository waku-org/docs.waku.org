"use strict";(self.webpackChunkwaku_guide=self.webpackChunkwaku_guide||[]).push([[7460],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(96540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}},37252:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"learn/concepts/transports","title":"Transports","description":"Transports help move data packets across a network by establishing connections between peers. They define the rules and protocols to ensure efficient network transmission, routing, and data delivery.","source":"@site/docs/learn/concepts/transports.md","sourceDirName":"learn/concepts","slug":"/learn/concepts/transports","permalink":"/learn/concepts/transports","draft":false,"unlisted":false,"editUrl":"https://github.com/waku-org/docs.waku.org/tree/develop/docs/learn/concepts/transports.md","tags":[],"version":"current","lastUpdatedAt":null,"frontMatter":{"title":"Transports","hide_table_of_contents":true},"sidebar":"learn","previous":{"title":"Network Domains","permalink":"/learn/concepts/network-domains"},"next":{"title":"Peer Discovery","permalink":"/learn/concepts/peer-discovery"}}');var s=t(74848),r=t(28453);const i={title:"Transports",hide_table_of_contents:!0},a=void 0,c={},l=[];function d(e){const n={a:"a",admonition:"admonition",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Transports help move data packets across a network by establishing connections between peers. They define the rules and protocols to ensure efficient network transmission, routing, and data delivery."}),"\n",(0,s.jsx)(n.p,{children:"Waku is a transport-agnostic framework that allows developers to choose and support multiple protocols according to their requirements. For Waku nodes, the following transports are recommended:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"TCP"}),": By default, Waku nodes use TCP for communication. Service nodes should employ TCP for listening to and connecting with other nodes."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Secure WebSocket"}),": In browser environments, secure WebSocket is used. Service nodes are encouraged to set up SSL certificates to enable incoming connections from browsers and serve them securely."]}),"\n",(0,s.jsxs)(n.li,{children:["Other protocols like ",(0,s.jsx)(n.a,{href:"https://github.com/waku-org/js-waku/issues/20",children:"WebRTC"}),", ",(0,s.jsx)(n.a,{href:"https://github.com/waku-org/js-waku/issues/697",children:"WebTransport"}),", and QUIC have been researched and studied for potential integration."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Waku ensures compatibility and improved communication capabilities by following these recommended transports."})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);